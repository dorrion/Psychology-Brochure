import Head from 'next/head';
import { useState } from 'react';
import Layout from 'components/layout';

import { ProgramProps } from 'shared/store/type';
import { DownArrow, UpArrow } from 'components/icon';
import ProgramCard from 'components/Home/4/ProgramCard';

export default function index({ data }: any) {
  // 강의형
  const [isLectureMoreView, setIsLectureMoreView] = useState<Boolean>(false);
  const onClickMoreViewButton = () => {
    setIsLectureMoreView(!isLectureMoreView);
  };

  // 세미나형
  const [isSeminarMoreView, setIsSeminarMoreView] = useState<Boolean>(false);
  const onClickSeminarMoreViewButton = () => {
    setIsSeminarMoreView(!isSeminarMoreView);
  };

  // 더보기 버튼이 True일 때는 모두 보여주기
  // 더보기 버튼이 False일 때는 3개만 slice 해서 보여주기
  let LectureList = isLectureMoreView ? data[0] : data[0].slice(0, 3);
  let SeminarList = isSeminarMoreView ? data[1] : data[1].slice(0, 3);

  // 강의형
  const lecture = LectureList?.map((el: ProgramProps) => {
    return (
      <ProgramCard
        key={el.name}
        name={el.name}
        description={el.description}
        category={el.category}
        area={el.area}
        period={el.period}
      />
    );
  });
  // 세미나형
  const seminar = SeminarList?.map((el: ProgramProps) => {
    return (
      <ProgramCard
        key={el.name}
        name={el.name}
        description={el.description}
        category={el.category}
        area={el.area}
        period={el.period}
      />
    );
  });
  // 캠프, 연수형
  const camp = data[2]?.map((el: ProgramProps) => {
    return (
      <ProgramCard
        key={el.name}
        name={el.name}
        description={el.description}
        category={el.category}
        area={el.area}
        period={el.period}
      />
    );
  });

  return (
    <Layout>
      <Head>
        {/* 메타데이터 */}
        <title>심리학과에서 비교과하기</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="text-gray-600 body-font ">
        <div className="container px-5 py-24 mx-auto flex-col flexBox">
          <h1 className="text-6xl sm:text-3xl font-bold font-sans text-gray-900 mb-4 text-left">
            심리학과 비교과 프로그램 하기
          </h1>
          <div className="flex-wrap flexBox">{lecture}</div>
          <button className="flex-col flexBox" onClick={onClickMoreViewButton}>
            <p className="mb-4 font-base">
              {isLectureMoreView ? '접기' : '더보기'}
            </p>
            {isLectureMoreView ? <UpArrow /> : <DownArrow />}
          </button>
          <div className="flex-wrap flexBox">{seminar}</div>
          <button
            className="flex-col flexBox"
            onClick={onClickSeminarMoreViewButton}
          >
            <p className="mb-4 font-base">
              {isSeminarMoreView ? '접기' : '더보기'}
            </p>
            {isSeminarMoreView ? <UpArrow /> : <DownArrow />}
          </button>
          <div className="flex-wrap flexBox">{camp}</div>
        </div>
      </section>
    </Layout>
  );
}

import loadData from 'shared/utils/loadData';

export async function getStaticProps() {
  const data = await loadData({ subfolder: 'Home', file: 'Program' });

  return {
    props: {
      data,
    },
  };
}
